---
title: "MD HW5"
author: "Carter Wyatt"
format: html
editor: visual
embed resources: true
---

```{r}
library(tidyverse)


twitch_data <- read_csv("https://raw.githubusercontent.com/vaiseys/dav-course/main/Data/twitchdata-update.csv")
```

```{r}
library(janitor)
twitch_data <- clean_names(twitch_data)

# Inspect new names
colnames(twitch_data)
```

## Question 1

```{r}

twitch_data |>
  select(channel, average_viewers, followers) |>
  sample_n(size = 5) 

```

What do you notice?

I notice that there is an array of average viewers, followers, and channels every time I run the code.

```{r}
twitch_data |>
  select(channel, average_viewers, followers) |>
  sample_n(size = 5) |>
summarise(average_viewers, followers)
```

Describe the results in a few words. Does anything capture your attention?

The results of viewers seem to be all over the place and the the thing that captures my attention the most is the average viewer outlier at over 5,000.

```{r}
twitch_data |>
  select(channel, average_viewers, followers) |>
  sample_n(size = 5) |>
summarise(average_viewers, followers) |>
  ggplot(
    aes(x = average_viewers, y = followers)
  ) +
  geom_point() +
  labs(x = "Average Viewers", y = "Followers", title = "Random Channels")
```

What do you notice?

I notice that the number of followers has seemed to go down a tad, but the overall average viewers has gone up.

```{r}
twitch_data |>
  select(channel, average_viewers, followers) |>
  sample_n(size = 5) |>
summarise(average_viewers, followers) |>
  ggplot(
    aes(x = average_viewers, y = followers)
  ) +
  geom_point() +
  labs(x = "Average Viewers", y = "Followers", title = "Random Channels") +
  scale_x_log10() + scale_y_log10()
```

What do you see now? How does the relationship look like?

I see that the number of followers has begin to go back up as well as the number of average viewers. The relationship looks like the more viewers, the more followers.

```{r}
twitch_data <- twitch_data %>% 
  mutate(log_viewers = log10(average_viewers), 
         log_followers = log10(followers))
```

## Question 2

```{r}

fit1 <- lm(log_viewers ~ log_followers,  data = twitch_data) 
```

\$\$ 1.1\^{0.4} = 4.442731 \$\$

A 10% increase in followers is associated with a 4.2% increase in the average number of viewers.

## Question 3

```{r}
library(broom)

pred_data <- augment(fit1)

# glimpse our new data 
glimpse(pred_data)
```

```{r}
pred_data %>% 
  ggplot(aes(x = log_followers, 
             y = log_viewers)) +
  geom_jitter(alpha = 0.4) + 
  geom_line(aes(x = log_followers, 
                y = .fitted), 
            col = "orange") + 
  theme_minimal() +
  labs(subtitle = "Fitted Model and Raw Data", 
       title = "Followers & Average Viewership", 
       x = "log(followers)", 
       y = "log(viewers)")
```

Do you think our model describes the relationship well?

I think our model describes the relationship exceptionally well.

```{r}
pred_data %>% 
  ggplot(aes(x = log_followers, 
             y = .resid)) +
  geom_jitter(alpha = 0.4) + 
  geom_line(aes(x = log_followers, 
                y = .fitted), 
            col = "orange") + 
  theme_minimal() +
  labs(subtitle = "Fitted Model and Raw Data", 
       title = "Followers & Average Viewership", 
       x = "log(followers)", 
       y = "log(viewers)")
```

What do you see?

I see the number of viewers increasing increminetaly and the number of followers seeming to stay around the same.

Are there any big residuals?

There are some big residuals in the log(followers) category that are noticable.

DO they happen often in a particular range of our x-variable?

It seems the range that it seems to happen in is the x-variable in between 5 and 6.

If so, we would have a problem: our model would systematically fail to predict part of our data.

## Question 4

1.  The raw data

2.  Summaries of the variables

```{r}
fit2 <- lm(log_viewers ~ language, data = twitch_data)
```

1.  Plot the variables

```{r}
twitch_data |>
  ggplot(
    aes(x = average_viewers)) +   geom_boxplot() + facet_wrap(~language) +
  labs(x = "Total Number", y = "Average Viewers", title = "Language Average Views")
```

## Question 5

```{r}
fit3 <- lm(average_viewers ~ language, data = twitch_data)
```

```{r}
twitch_data <- twitch_data %>% 
  mutate(language = as.factor(language), 
         language = relevel(language, ref = "English"))
```

```{r}
twitch_data |> ggplot(aes(x = average_viewers, y = language)) + geom_jitter(alpha = 0.4) + geom_line(aes(x = average_viewers, y = language), col = "red") + theme_minimal() + 
  labs(x = "Views Avg", y = "Language", title = "Language in Average Viewers")
```

Now, fit your model. Your coefficients will tell you how many more (or fewer) average viewers are related to streaming in languages different than English. Interpret the results. How is my prediction doing?

Your prediction is doing suprisingly and pleasantly well for our data model as long as I am doing it correctly.

## Question 6

Explore the residuals here using a similar plot as above. There are a couple of points our model really missed - which ones were they?

Geom Smooth was missed as well as scale_x_log10 which is very important in understanding the data and interpretting it.

```{r}
twitch_data |> 
  ggplot(aes(x = average_viewers, y = language)) +
geom_jitter(alpha = 0.2) + 
geom_smooth(method = lm) + 
scale_x_log10() 
```

There are a couple of points our model really missed - which ones were they?

They missed Finnish, Greek, Other and Swedish.
